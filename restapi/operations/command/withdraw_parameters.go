package command

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/middleware"

	"github.com/loofort/softswiss/models"
)

// NewWithdrawParams creates a new WithdrawParams object
// with the default values initialized.
func NewWithdrawParams() WithdrawParams {
	var ()
	return WithdrawParams{}
}

// WithdrawParams contains all the bound params for the withdraw operation
// typically these are obtained from a http.Request
//
// swagger:parameters withdraw
type WithdrawParams struct {
	/*
	  In: body
	*/
	Body *models.Account
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls
func (o *WithdrawParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	var body models.Account
	if err := route.Consumer.Consume(r.Body, &body); err != nil {
		res = append(res, errors.NewParseError("body", "body", "", err))
	} else {
		if err := body.Validate(route.Formats); err != nil {
			res = append(res, err)
		}

		if len(res) == 0 {
			o.Body = &body
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
