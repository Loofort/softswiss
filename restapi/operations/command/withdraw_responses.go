package command

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/loofort/softswiss/models"
)

/*WithdrawOK return account info with total money amount

swagger:response withdrawOK
*/
type WithdrawOK struct {

	// In: body
	Payload *models.Account `json:"body,omitempty"`
}

// NewWithdrawOK creates WithdrawOK with default headers values
func NewWithdrawOK() *WithdrawOK {
	return &WithdrawOK{}
}

// WithPayload adds the payload to the withdraw o k response
func (o *WithdrawOK) WithPayload(payload *models.Account) *WithdrawOK {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *WithdrawOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*WithdrawNotFound account not found info

swagger:response withdrawNotFound
*/
type WithdrawNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewWithdrawNotFound creates WithdrawNotFound with default headers values
func NewWithdrawNotFound() *WithdrawNotFound {
	return &WithdrawNotFound{}
}

// WithPayload adds the payload to the withdraw not found response
func (o *WithdrawNotFound) WithPayload(payload *models.Error) *WithdrawNotFound {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *WithdrawNotFound) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*WithdrawDefault unexpected error

swagger:response withdrawDefault
*/
type WithdrawDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewWithdrawDefault creates WithdrawDefault with default headers values
func NewWithdrawDefault(code int) *WithdrawDefault {
	if code <= 0 {
		code = 500
	}

	return &WithdrawDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the withdraw default response
func (o *WithdrawDefault) WithStatusCode(code int) *WithdrawDefault {
	o._statusCode = code
	return o
}

// WithPayload adds the payload to the withdraw default response
func (o *WithdrawDefault) WithPayload(payload *models.Error) *WithdrawDefault {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *WithdrawDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
